<?xml version="1.0" encoding="UTF-8"?>

<project name="Scala" default="build" basedir=".">

    <property name="play-scala.plugin.version" value="0.9.2" description="Default value, if the plugin was not built from local checked-out project"/>


    <path id="project.classpath">
        <fileset dir="lib">
            <include name="*.jar"/>
            <exclude name="play-scala.jar"/>
        </fileset>
    </path>

    <path id="play.classpath">
        <pathelement path="${play.path}/framework/classes"/>
        <fileset dir="${play.path}/framework/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${play.path}/framework">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="check" unless="play.path">
        <fail message="Please specify Play framework path using -Dplay.path=/path/to/framework/home" />
    </target>

    <target name="apidoc">
        <delete dir="documentation/api" />
        <mkdir dir="documentation/api" />
        <taskdef resource="scala/tools/ant/antlib.xml">
            <classpath refid="project.classpath" />
        </taskdef>
        <scaladoc destdir="documentation/api" srcdir="src" doctitle="play scala API documentation">
            <include name="**/*.scala" />
            <classpath refid="project.classpath" />
        </scaladoc>
    </target>

    <target name="build-compiler">
        <taskdef resource="scala/tools/ant/antlib.xml">
            <classpath refid="project.classpath" />
        </taskdef>
        <delete dir="tmp" />
        <delete file="lib/play-scala-compiler.jar" />
        <mkdir dir="tmp/compiler-classes" />
        <scalac srcdir="src-compiler" destdir="tmp/compiler-classes" unchecked="on" deprecation="on" force="changed">
            <classpath refid="play.classpath" />
            <classpath refid="project.classpath" />
        </scalac>
        <jar destfile="lib/play-scala-compiler.jar" basedir="tmp/compiler-classes">
            <manifest>
                <section name="Play">
                    <attribute name="Specification-Title" value="Scala Compiler"/>
                </section>
            </manifest>
        </jar>
    </target>

    <target name="build" depends="check,build-compiler,git.revision">
        <delete file="commands.pyc" />
        <delete dir="tmp" />
        <delete file="lib/play-scala.jar" />
        <mkdir dir="tmp/classes" />

        <javac srcdir="src" destdir="tmp/classes" debug="true">
            <classpath refid="play.classpath" />
            <classpath refid="project.classpath" />
        </javac>

        <copy todir="tmp/classes">
            <fileset dir="src">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/play.plugins"/>
            </fileset>
        </copy>

        <java classname="play.scalasupport.build.ModuleBuilder" fork="true" maxmemory="1024m" failonerror="true">
            <jvmarg value="-Xms512m" />
            <classpath refid="play.classpath" />
            <classpath refid="project.classpath" />
        </java>

        <jar destfile="lib/play-scala.jar" basedir="tmp/classes">
            <manifest>
                    <attribute name="Specification-Title" value="Play Scala module"/>
                    <attribute name="Specification-Version" value="${repository.version}"/>
                    <attribute name="Implementation-Title" value="play-scala"/>
                    <attribute name="Implementation-Version" value="${repository.version}"/>
            </manifest>
        </jar>
    </target>

    <target name="incremental" depends="check,git.revision">

        <java classname="play.scalasupport.build.ModuleBuilder" fork="true" maxmemory="1024m" failonerror="true">
            <jvmarg value="-Xms512m" />
            <jvmarg value="-Dincremental" />
            <classpath refid="play.classpath" />
            <classpath refid="project.classpath" />
        </java>

        <copy todir="tmp/classes">
            <fileset dir="src">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/play.plugins"/>
            </fileset>
        </copy>

        <jar destfile="lib/play-scala.jar" basedir="tmp/classes">
            <manifest>
                    <attribute name="Specification-Title" value="Play Scala module"/>
                    <attribute name="Specification-Version" value="${repository.version}"/>
                    <attribute name="Implementation-Title" value="play-scala"/>
                    <attribute name="Implementation-Version" value="${repository.version}"/>
            </manifest>
        </jar>

    </target>

    <target name="test" depends="build">
        <echo message="Using ${play.path}/play" />
        <echo message="Testing development lifecycle (wait ...)" />
        <exec executable="${basedir}/samples-and-tests/i-am-a-developer/tests.py" failonerror="true">
            <arg value="${play.path}/play"/>
        </exec>

        <antcall target="play-test">
            <param name="testAppPath" value="${basedir}/samples-and-tests/just-test-cases"/>
        </antcall>

        <antcall target="play-test">
            <param name="testAppPath" value="${basedir}/samples-and-tests/play-with-scala"/>
        </antcall>

        <antcall target="play-test">
            <param name="testAppPath" value="${basedir}/samples-and-tests/yabe"/>
        </antcall>

        <antcall target="play-test">
            <param name="testAppPath" value="${basedir}/samples-and-tests/zencontact"/>
        </antcall>

        <echo message="*****************" />
        <echo message="All tests passed!" />
        <echo message="*****************" />

    </target>

    <target name="play-test">
        <echo message="${play.path}/play auto-test ${testAppPath} (wait)" />
        <exec executable="${play.path}/play" failonerror="true">
            <arg value="clean"/>
            <arg value="${testAppPath}"/>
        </exec>
        <exec executable="${play.path}/play" failonerror="true">
            <arg value="auto-test"/>
            <arg value="${testAppPath}"/>
        </exec>
        <available file="${testAppPath}/test-result/result.passed" property="${testAppPath}testPassed" />
        <fail message="Last test has failed ! (Check results in file://${testAppPath}/test-result)">
            <condition>
                <not>
                    <isset property="${testAppPath}testPassed"/>
                </not>
            </condition>
        </fail>
    </target>

    <available file=".git" type="dir" property="git.present"/>

    <!--Retrieves the git local revision number or returns play-scala.plugin.version if not found -->
    <target name="git.revision" description="Store git revision in ${repository.version}" if="git.present">
        <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
            <arg value="describe"/>
            <arg value="--tags"/>
            <arg value="--always"/>
            <arg value="HEAD"/>
        </exec>
        <condition property="repository.version" value="${git.revision}" else="${play-scala.plugin.version}">
            <and>
                <isset property="git.revision"/>
                <length string="${git.revision}" trim="yes" length="0" when="greater"/>
            </and>
        </condition>
    </target>

</project>
